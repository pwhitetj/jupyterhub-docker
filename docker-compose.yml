version: '3'

services:
  jupyterhub:
    build: jupyterhub
    image: pewhitetj/jupyterhub_img
    container_name: jupyterhub
    hostname: jupyterhub
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jupyterhub_data:/srv/jupyterhub
    networks:
      - jupyterhub-net
    environment:
      - DOCKER_JUPYTER_CONTAINER=pewhitetj/jupyterlab_small_img
      - DOCKER_NETWORK_NAME=swarm_jupyterhub-net
      - HUB_IP=jupyterhub
      - HOST=${HOST}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - OAUTH_TOKEN_URL=${OAUTH2_TOKEN_URL}
      - OAUTH2_AUTHORIZE_URL=${OAUTH2_AUTHORIZE_URL}
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:${HOST}
      - traefik.backend=jupyterhub
    restart: on-failure
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  jupyterlab:
    build: jupyterlab
    image: pewhitetj/jupyterlab_small_img
    container_name: jupyterlab-throaway
    network_mode: none
    command: echo

  reverse-proxy:
    image: traefik:1.7.17
    container_name: reverse-proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./reverse-proxy/traefik.toml:/etc/traefik/traefik.toml
      - /etc/certs:/etc/certs
      - /var/run/docker.sock:/var/run/docker.sock
    restart: on-failure
    networks:
      - jupyterhub-net
      
volumes:
  jupyterhub_data:

networks:
  jupyterhub-net:
    driver: overlay

